{
	"info": {
		"_postman_id": "45eb433e-adb9-489f-ab9c-b01cee868542",
		"name": "crudOperation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33288288"
	},
	"item": [
		{
			"name": "Crud_pre_req",
			"item": [
				{
					"name": "Post : Create User",
					"item": [
						{
							"name": "Create user(TC_01)[P]_ when passing valid mandetory parameter.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});",
											"var jsonData= pm.response.json();",
											"pm.environment.set(\"id\", jsonData.id);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var randomInt = Math.floor(Math.random() * 1000);",
											" ",
											"var uName = \"Sanjeev\" + randomInt ;",
											"",
											"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
											" ",
											"pm.environment.set(\"name\", uName);",
											"",
											"pm.environment.set(\"email\", Mail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{name}}\", \"gender\":\"female\", \"email\":\"{{email}}\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_02)[P]_when status pass as inactive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.environment.set(\"email\", Mail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{name}}\", \"gender\":\"male\", \"email\":\"{{email}}\", \"status\":\"inactive\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_03)[N]_when email id pass as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"ram sharma\",\"gender\":\"male\", \"email\":null, \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/{{id}}",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_04)[N]_when name  pass as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":null, \"gender\":\"male\", \"email\":\"abc@gmail.com\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_05)[N]_when name and email pass as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":null, \"gender\":\"male\", \"email\":null, \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_06)[N]_when email id pass as invalid datatype",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"ramu prasad\", \"gender\":\"male\", \"email\":\"1245gmail.com\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_07)[N]_when gender pass as invalid datatype",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Aman patil\", \"gender\":\"sssss\", \"email\":\"aman.patil@gmail.com\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_08)[N]_when gender pass as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Sonali Bendre\", \"gender\":null, \"email\":\"bendre.sonali@gmail.com\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user(TC_09)[N]_when passing same email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{name}}\", \"gender\":\"male\", \"email\":\"dwivedi_anunay@cremin.example\", \"status\":\"active\"}"
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get: User list",
					"item": [
						{
							"name": "User list(TC_01)[P]_when fatch all users list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "User list(TC_02)[p]_when fatch single user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/{{id}}",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "User list(TC_03)[N]_when fatch invalid user not possible",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/22221",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"22221"
									]
								}
							},
							"response": []
						},
						{
							"name": "User list(TC_04)[N]_when fatch alfanumeric user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/22221#",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"22221"
									],
									"hash": ""
								}
							},
							"response": []
						},
						{
							"name": "User list(TC_05)[N]_when fatch with black user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Response time is less than 1500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{gorest_url}}/public/v2/users/ ",
									"host": [
										"{{gorest_url}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										" "
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Patch:Update User",
			"item": [
				{
					"name": "Update user(TC_01)[P]_when passing random name and email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":\"male\", \"email\":\"{{eMail}}\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_02)[N]_when update name as null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":null, \"gender\":\"male\", \"email\":\"{{eMail}}\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_03)[N]_when update email as null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":\"male\", \"email\":null, \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_04)[N]_when update name and email as null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":null, \"gender\":\"male\", \"email\":null, \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_05)[N]_when update invalid email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":\"male\", \"email\":\"abcgmail.com\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_06)[N]_when update gender as null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var Mail = pm.variables.replaceIn('{{$randomEmail}}');",
									"pm.environment.set(\"eMail\", Mail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":null, \"email\":\"{{eMail}}\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Update user(TC_07)[N]_when update email as true",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":\"male\", \"email\":true, \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Update user(TC_08)[N]_when update invalid gender string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"sameer gupta\", \"gender\":\"ssss\", \"email\":\"{{eMail}}\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user(TC_09)[N]_when name pass as alfa numeric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":245652652, \"email\":\"allasani.peddana@15ce.com\", \"status\":\"active\"}"
						},
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete: Delete User",
			"item": [
				{
					"name": "Delete user(TC_01)[P]_when pass valid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () { //no content",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ACCESS-TOKEN",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/{{id}}",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user(TC_02)[N]_when pass invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () { //no content",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ACCESS-TOKEN",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/11111",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"11111"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user(TC_03)[N]_when pass alfa-numeric id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () { //no content",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ACCESS-TOKEN",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/6752556$",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"6752556$"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user(TC_04)[N]_when pass blanck id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () { //no content",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "12b66768b998a10c6707c0f381b4d9dcbf3a6439fd4dbd5d7ddabf947393ce40",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ACCESS-TOKEN",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{gorest_url}}/public/v2/users/ ",
							"host": [
								"{{gorest_url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								" "
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "r_id",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		}
	]
}